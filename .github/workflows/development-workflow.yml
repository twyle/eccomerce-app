name: "Development Build"
on: 
- push

env:
  APP_NAME: lyle-ecom

jobs:
  Build-Backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    environment: 
      name: Test
    env:
      TEST_DB: ${{secrets.TEST_DB}} 
      TEST_DB_HOST: ${{secrets.TEST_DB_HOST}}
      MONGO_PORT: ${{secrets.MONGO_PORT}}
      TEST_DB_USER: ${{secrets.TEST_DB_USER}}
      TEST_DB_PASSWORD: ${{secrets.TEST_DB_PASSWORD}}
      FLASK_ENV: ${{secrets.FLASK_ENV}}
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Test with pytest
      run: if [ -d tests ] || [ -d test ]; then python -m pytest; fi

  DeployDev:
    name: Deploy to Dev 
    # if: github.event_name == 'pull_request'
    needs: [Build-Backend]
    runs-on: ubuntu-latest
    environment: 
      name: Development
      url: 'https://${{env.APP_NAME}}-dev.herokuapp.com/'
    steps:
      - name: Deploy
        run: echo I am deploying ${{ env.APP_NAME }} at https://${{env.APP_NAME}}-dev.herokuapp.com/
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "${{ env.APP_NAME }}-dev" #Must be unique in Heroku
          heroku_email: "${{ secrets.HEROKU_EMAIL }}"
        env:
          HD_FLASK_ENV: ${{secrets.FLASK_ENV}}
          HD_FLASK_APP: ${{secrets.FLASK_APP}}
